import { tags } from "typia";

import { enterprise_minus_webhooks } from "./enterprise_minus_webhooks";
import { simple_minus_installation } from "./simple_minus_installation";
import { organization_minus_simple_minus_webhooks } from "./organization_minus_simple_minus_webhooks";
import { webhook_minus_rubygems_minus_metadata } from "./webhook_minus_rubygems_minus_metadata";
import { repository_minus_webhooks } from "./repository_minus_webhooks";
import { simple_minus_user_minus_webhooks } from "./simple_minus_user_minus_webhooks";

export type webhook_minus_registry_minus_package_minus_updated = {
  action: "updated";
  enterprise?: enterprise_minus_webhooks;
  installation?: simple_minus_installation;
  organization?: organization_minus_simple_minus_webhooks;
  registry_package: {
    created_at: string;
    description: any | null;
    ecosystem: string;
    html_url: string;
    id: number & tags.Type<"int32">;
    name: string;
    namespace: string;
    owner: {
      avatar_url: string;
      events_url: string;
      followers_url: string;
      following_url: string;
      gists_url: string;
      gravatar_id: string;
      html_url: string;
      id: number & tags.Type<"int32">;
      login: string;
      node_id: string;
      organizations_url: string;
      received_events_url: string;
      repos_url: string;
      site_admin: boolean;
      starred_url: string;
      subscriptions_url: string;
      type: string;
      url: string;
    };
    package_type: string;
    package_version: {
      author: {
        avatar_url: string;
        events_url: string;
        followers_url: string;
        following_url: string;
        gists_url: string;
        gravatar_id: string;
        html_url: string;
        id: number & tags.Type<"int32">;
        login: string;
        node_id: string;
        organizations_url: string;
        received_events_url: string;
        repos_url: string;
        site_admin: boolean;
        starred_url: string;
        subscriptions_url: string;
        type: string;
        url: string;
      };
      body: string;
      body_html: string;
      created_at: string;
      description: string;
      docker_metadata?: ({
        tags?: string[];
      } | null)[];
      draft?: boolean;
      html_url: string;
      id: number & tags.Type<"int32">;
      installation_command: string;
      manifest?: string;
      metadata: {}[];
      name: string;
      package_files: {
        content_type?: string;
        created_at?: string;
        download_url?: string;
        id?: number & tags.Type<"int32">;
        md5?: string | null;
        name?: string;
        sha1?: string | null;
        sha256?: string;
        size?: number & tags.Type<"int32">;
        state?: string;
        updated_at?: string;
      }[];
      package_url: string;
      prerelease?: boolean;
      release?: {
        author: {
          avatar_url: string;
          events_url: string;
          followers_url: string;
          following_url: string;
          gists_url: string;
          gravatar_id: string;
          html_url: string;
          id: number & tags.Type<"int32">;
          login: string;
          node_id: string;
          organizations_url: string;
          received_events_url: string;
          repos_url: string;
          site_admin: boolean;
          starred_url: string;
          subscriptions_url: string;
          type: string;
          url: string;
        };
        created_at: string;
        draft: boolean;
        html_url: string;
        id: number & tags.Type<"int32">;
        name: string;
        prerelease: boolean;
        published_at: string;
        tag_name: string;
        target_commitish: string;
        url: string;
      };
      rubygems_metadata?: webhook_minus_rubygems_minus_metadata[];
      summary: string;
      tag_name?: string;
      target_commitish: string;
      target_oid: string;
      updated_at: string;
      version: string;
    };
    registry: {} | null;
    updated_at: string;
  };
  repository?: repository_minus_webhooks;
  sender: simple_minus_user_minus_webhooks;
};
